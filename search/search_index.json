{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"HPE Storage Array Exporter for Prometheus \u00b6 The HPE Storage Array Exporter for Prometheus provides observability for an HPE storage system via the Prometheus metric format. Synopsis \u00b6 This documentation shows how to deploy the exporter, the metrics it provides, and how to integrate it with Prometheus . Compatibility \u00b6 HPE Storage Array Exporter for Prometheus is compatible with these storage arrays: HPE Alletra Storage MP Block HPE Alletra 9000 HPE Alletra 5000/6000 HPE Nimble Storage HPE Primera HPE 3PAR See the compatibility chart for specific versions and releases. Support \u00b6 The HPE Storage Array Exporter for Prometheus is supported by HPE when used with HPE storage arrays on valid support contracts. Send email to support@nimblestorage.com to get started with any issue that requires assistance. Engage your HPE representative for other means to contact HPE Storage support directly.","title":"HPE Storage Array Exporter for Prometheus"},{"location":"index.html#hpe_storage_array_exporter_for_prometheus","text":"The HPE Storage Array Exporter for Prometheus provides observability for an HPE storage system via the Prometheus metric format.","title":"HPE Storage Array Exporter for Prometheus"},{"location":"index.html#synopsis","text":"This documentation shows how to deploy the exporter, the metrics it provides, and how to integrate it with Prometheus .","title":"Synopsis"},{"location":"index.html#compatibility","text":"HPE Storage Array Exporter for Prometheus is compatible with these storage arrays: HPE Alletra Storage MP Block HPE Alletra 9000 HPE Alletra 5000/6000 HPE Nimble Storage HPE Primera HPE 3PAR See the compatibility chart for specific versions and releases.","title":"Compatibility"},{"location":"index.html#support","text":"The HPE Storage Array Exporter for Prometheus is supported by HPE when used with HPE storage arrays on valid support contracts. Send email to support@nimblestorage.com to get started with any issue that requires assistance. Engage your HPE representative for other means to contact HPE Storage support directly.","title":"Support"},{"location":"deployment/index.html","text":"An HPE Storage Array Exporter for Prometheus deployment provides Prometheus metrics for a single storage system. A deployment can use an executable file or a container image. Configuration Command Options Using an Executable File Command Example Using a Container Image Docker Example Using a Kubernetes Deployment Configuration \u00b6 The address and credentials of the target storage system must be specified in a configuration file, using the format shown in this example storage-system.yaml file. address: 10.10.10.1 username: exampleuser password: examplepassword The address value is either a resolvable hostname or IP address of the management interface on the storage system. The username value identifies a storage system user with privileges described below. Storage System User Type Minimal Role Open Ports Requirements HPE Alletra Storage MP Block, Alletra 9000, Primera, 3PAR System User Browse 22, 443 HPE Alletra 5000/6000, Nimble Storage System User Guest 5392 HPE Alletra 5000/6000, Nimble Storage 1 Tenant N/A 443, 5392 1 = NimbleOS 6.0 and above only. Command Options \u00b6 Option Default Description --accept-eula false Confirms your acceptance of the HPE license restrictions --log.path None A file location to write log messages, in addition to stdout --metrics.disable-introspection false Excludes metrics about the metrics provider itself, with prefixes such as promhttp , process , and go --telemetry.addr :8080 The host:port address at which to provide metrics --telemetry.path /metrics The endpoint path at which to provide metrics Using an Executable File \u00b6 A Linux executable file is provided through GitHub releases . When an executable file has been copied to your server, it can be invoked with this command syntax: hpe-array-exporter [OPTION]... CONFIG-PATH Available OPTIONs are described in the Command Options section. CONFIG-PATH is the location of the storage system configuration file. Command Example \u00b6 ./hpe-array-exporter --log.path=/var/log/hpe-array-exporter.log /etc/config/storage-system.yaml Important Include the --accept-eula option or set the environment variable ACCEPT_HPE_STANDARD_EULA=yes to confirm your acceptance of the HPE license restrictions . Using a Container Image \u00b6 A container image is hosted at quay.io/hpestorage/array-exporter:v1.0.3 , with v1.0.3 replaced by the desired release version. When deploying the array exporter as a container, the configuration file must be mounted as a volume. Available options, including the --log.path used in the example below, are described in the Command Options section. Docker Example \u00b6 In this example, the configuration file at /tmp/storage-system.yaml is bound to the container's /etc/config/ directory as a volume using Docker's -v command option. The configuration file location inside the container is then given as a command argument. In addition, the -p option is used to map the container's port 8080 to port 9090 on the Docker host. docker run -it --name hpe-array-exporter -p 9090:8080 \\ -v /tmp/storage-system.yaml:/etc/config/storage-system.yaml \\ quay.io/hpestorage/array-exporter:v1.0.3 \\ --log.path /var/log/hpe-array-exporter.log \\ /etc/config/storage-system.yaml Important Include the --accept-eula option or set the environment variable ACCEPT_HPE_STANDARD_EULA=yes to confirm your acceptance of the HPE license restrictions . Consult the Docker command line documentation for more information on running containers using Docker. Using a Kubernetes Deployment \u00b6 Kubernetes deployment facilities are hosted in the co-deployments repository , including a Helm chart (via Artifact Hub) and sample YAML files .","title":"Deployment"},{"location":"deployment/index.html#configuration","text":"The address and credentials of the target storage system must be specified in a configuration file, using the format shown in this example storage-system.yaml file. address: 10.10.10.1 username: exampleuser password: examplepassword The address value is either a resolvable hostname or IP address of the management interface on the storage system. The username value identifies a storage system user with privileges described below. Storage System User Type Minimal Role Open Ports Requirements HPE Alletra Storage MP Block, Alletra 9000, Primera, 3PAR System User Browse 22, 443 HPE Alletra 5000/6000, Nimble Storage System User Guest 5392 HPE Alletra 5000/6000, Nimble Storage 1 Tenant N/A 443, 5392 1 = NimbleOS 6.0 and above only.","title":"Configuration"},{"location":"deployment/index.html#command_options","text":"Option Default Description --accept-eula false Confirms your acceptance of the HPE license restrictions --log.path None A file location to write log messages, in addition to stdout --metrics.disable-introspection false Excludes metrics about the metrics provider itself, with prefixes such as promhttp , process , and go --telemetry.addr :8080 The host:port address at which to provide metrics --telemetry.path /metrics The endpoint path at which to provide metrics","title":"Command Options"},{"location":"deployment/index.html#using_an_executable_file","text":"A Linux executable file is provided through GitHub releases . When an executable file has been copied to your server, it can be invoked with this command syntax: hpe-array-exporter [OPTION]... CONFIG-PATH Available OPTIONs are described in the Command Options section. CONFIG-PATH is the location of the storage system configuration file.","title":"Using an Executable File"},{"location":"deployment/index.html#command_example","text":"./hpe-array-exporter --log.path=/var/log/hpe-array-exporter.log /etc/config/storage-system.yaml Important Include the --accept-eula option or set the environment variable ACCEPT_HPE_STANDARD_EULA=yes to confirm your acceptance of the HPE license restrictions .","title":"Command Example"},{"location":"deployment/index.html#using_a_container_image","text":"A container image is hosted at quay.io/hpestorage/array-exporter:v1.0.3 , with v1.0.3 replaced by the desired release version. When deploying the array exporter as a container, the configuration file must be mounted as a volume. Available options, including the --log.path used in the example below, are described in the Command Options section.","title":"Using a Container Image"},{"location":"deployment/index.html#docker_example","text":"In this example, the configuration file at /tmp/storage-system.yaml is bound to the container's /etc/config/ directory as a volume using Docker's -v command option. The configuration file location inside the container is then given as a command argument. In addition, the -p option is used to map the container's port 8080 to port 9090 on the Docker host. docker run -it --name hpe-array-exporter -p 9090:8080 \\ -v /tmp/storage-system.yaml:/etc/config/storage-system.yaml \\ quay.io/hpestorage/array-exporter:v1.0.3 \\ --log.path /var/log/hpe-array-exporter.log \\ /etc/config/storage-system.yaml Important Include the --accept-eula option or set the environment variable ACCEPT_HPE_STANDARD_EULA=yes to confirm your acceptance of the HPE license restrictions . Consult the Docker command line documentation for more information on running containers using Docker.","title":"Docker Example"},{"location":"deployment/index.html#using_a_kubernetes_deployment","text":"Kubernetes deployment facilities are hosted in the co-deployments repository , including a Helm chart (via Artifact Hub) and sample YAML files .","title":"Using a Kubernetes Deployment"},{"location":"grafana/index.html","text":"Example Grafana dashboards, provided as is, are hosted on grafana.com .","title":"Grafana Dashboards"},{"location":"integration/index.html","text":"Overview \u00b6 When an HPE Storage Array Exporter for Prometheus has been deployed, a Prometheus instance can be configured to collect metrics from it. The configuration requirements depend on multiple factors, including the ways Prometheus and the exporter are deployed and the desired monitoring practices. The examples provided here are intended to facilitate setup of the exporter as a scrape target in select scenarios. Refer to Prometheus documentation for more complete guidance. Overview Prometheus Standalone Using a Prometheus Configuration File Prometheus running on Kubernetes Using a Kubernetes Service with Prometheus Helm Annotations Using a Kubernetes Service Monitor ServiceMonitor Example Important If the intention is to use the HPE provided Grafana dashboards, a label named \"array\" in scrape targets with the storage system designation (i.e. a hostname) is mandatory for the dashboards to work. Prometheus Standalone \u00b6 It's most common to have scrape targets statically defined in a Prometheus configuration file when running Prometheus as a standalone application. Using a Prometheus Configuration File \u00b6 When running Prometheus as either a standalone executable or a container, a configuration file (conventionally named prometheus.yml) is used. In it, a scrape job can be added for the exporter with configuration content similar to the following example. scrape_configs: - job_name: 'hpe-array-exporter' # A scrape interval of 30 seconds or more is recommended scrape_interval: 1m static_configs: # Set the target to the host address and port at which the exporter serves its metrics - targets: ['localhost:8080'] labels: # Specify any labels to be added to the resulting metrics Note It may be desirable to include a label to identify the storage system from which the metrics are collected. Prometheus running on Kubernetes \u00b6 When running Prometheus on Kubernetes, scrape targets may be dynamically discovered. Different methods are used when Prometheus is deployed via a Helm chart or an Operator. Using a Kubernetes Service with Prometheus Helm Annotations \u00b6 This example applies when the Prometheus Helm chart and the exporter are deployed in the same Kubernetes cluster. The Prometheus Helm chart uses a configuration file like the one described in the preceding section. Its default configuration enables Pods and Services to be identified as scrape targets using annotations such as prometheus.io/scrape: \"true\" and prometheus.io/scrape-slow: \"true\" . Annotations like these can be added to the exporter Service when created with either the sample YAML files or the Helm chart . Using a Kubernetes Service Monitor \u00b6 This example applies when the Prometheus Operator and the exporter are deployed in the same Kubernetes cluster. The Prometheus Operator and the Helm Kube Prometheus Stack can discover scrape targets via Service and ServiceMonitor objects. A Kubernetes Service is created along with a Deployment when using either the sample YAML files or the Helm chart . By default it is a ClusterIP Service for access from within the cluster. A NodePort Service can be configured instead to provide access from outside the cluster, for example in conjunction with a Prometheus configuration file as described above. A ServiceMonitor enables a Prometheus custom resource (defined by the Prometheus Operator) to discover the exporter Service as a scrape target. Whether the Prometheus instance is created automatically (such as by a Helm chart installation) or manually, its serviceMonitorNamespaceSelector and serviceMonitorSelector fields control which ServiceMonitor objects it discovers. The ServiceMonitor's namespaceSelector and selector fields in turn control how an exporter Service is identified. In the following example, the selector identifies the exporter Service based on a matching app label. ServiceMonitor Example \u00b6 kind: ServiceMonitor apiVersion: monitoring.coreos.com/v1 metadata: name: hpe-array-exporter-servicemonitor namespace: hpe-storage labels: # A selector for this label is used by a Prometheus Operator, # installed via OLM k8s-app: prometheus # A \"release\" label selector is used by the Helm Kube Prometheus Stack, # with the value as the release specified on chart installation release: prometheus spec: # Match the namespace of the target Array Exporter service, # or omit the namespaceSelector namespaceSelector: matchNames: - hpe-storage selector: matchLabels: app: hpe-array-exporter endpoints: - port: http-metrics scheme: http interval: 1m # Corresponding labels on the Array Exporter service are added to # the scraped metrics; customize as desired targetLabels: - array Note It may be desirable for metrics from the exporter to include a label identifying the storage system from which they are collected. In this example, the targetLabels configuration refers to an array label that must have been included in the Service object. A ServiceMonitor example can also be found in the sample YAML files .","title":"Prometheus Integration"},{"location":"integration/index.html#overview","text":"When an HPE Storage Array Exporter for Prometheus has been deployed, a Prometheus instance can be configured to collect metrics from it. The configuration requirements depend on multiple factors, including the ways Prometheus and the exporter are deployed and the desired monitoring practices. The examples provided here are intended to facilitate setup of the exporter as a scrape target in select scenarios. Refer to Prometheus documentation for more complete guidance. Overview Prometheus Standalone Using a Prometheus Configuration File Prometheus running on Kubernetes Using a Kubernetes Service with Prometheus Helm Annotations Using a Kubernetes Service Monitor ServiceMonitor Example Important If the intention is to use the HPE provided Grafana dashboards, a label named \"array\" in scrape targets with the storage system designation (i.e. a hostname) is mandatory for the dashboards to work.","title":"Overview"},{"location":"integration/index.html#prometheus_standalone","text":"It's most common to have scrape targets statically defined in a Prometheus configuration file when running Prometheus as a standalone application.","title":"Prometheus Standalone"},{"location":"integration/index.html#using_a_prometheus_configuration_file","text":"When running Prometheus as either a standalone executable or a container, a configuration file (conventionally named prometheus.yml) is used. In it, a scrape job can be added for the exporter with configuration content similar to the following example. scrape_configs: - job_name: 'hpe-array-exporter' # A scrape interval of 30 seconds or more is recommended scrape_interval: 1m static_configs: # Set the target to the host address and port at which the exporter serves its metrics - targets: ['localhost:8080'] labels: # Specify any labels to be added to the resulting metrics Note It may be desirable to include a label to identify the storage system from which the metrics are collected.","title":"Using a Prometheus Configuration File"},{"location":"integration/index.html#prometheus_running_on_kubernetes","text":"When running Prometheus on Kubernetes, scrape targets may be dynamically discovered. Different methods are used when Prometheus is deployed via a Helm chart or an Operator.","title":"Prometheus running on Kubernetes"},{"location":"integration/index.html#using_a_kubernetes_service_with_prometheus_helm_annotations","text":"This example applies when the Prometheus Helm chart and the exporter are deployed in the same Kubernetes cluster. The Prometheus Helm chart uses a configuration file like the one described in the preceding section. Its default configuration enables Pods and Services to be identified as scrape targets using annotations such as prometheus.io/scrape: \"true\" and prometheus.io/scrape-slow: \"true\" . Annotations like these can be added to the exporter Service when created with either the sample YAML files or the Helm chart .","title":"Using a Kubernetes Service with Prometheus Helm Annotations"},{"location":"integration/index.html#using_a_kubernetes_service_monitor","text":"This example applies when the Prometheus Operator and the exporter are deployed in the same Kubernetes cluster. The Prometheus Operator and the Helm Kube Prometheus Stack can discover scrape targets via Service and ServiceMonitor objects. A Kubernetes Service is created along with a Deployment when using either the sample YAML files or the Helm chart . By default it is a ClusterIP Service for access from within the cluster. A NodePort Service can be configured instead to provide access from outside the cluster, for example in conjunction with a Prometheus configuration file as described above. A ServiceMonitor enables a Prometheus custom resource (defined by the Prometheus Operator) to discover the exporter Service as a scrape target. Whether the Prometheus instance is created automatically (such as by a Helm chart installation) or manually, its serviceMonitorNamespaceSelector and serviceMonitorSelector fields control which ServiceMonitor objects it discovers. The ServiceMonitor's namespaceSelector and selector fields in turn control how an exporter Service is identified. In the following example, the selector identifies the exporter Service based on a matching app label.","title":"Using a Kubernetes Service Monitor"},{"location":"integration/index.html#servicemonitor_example","text":"kind: ServiceMonitor apiVersion: monitoring.coreos.com/v1 metadata: name: hpe-array-exporter-servicemonitor namespace: hpe-storage labels: # A selector for this label is used by a Prometheus Operator, # installed via OLM k8s-app: prometheus # A \"release\" label selector is used by the Helm Kube Prometheus Stack, # with the value as the release specified on chart installation release: prometheus spec: # Match the namespace of the target Array Exporter service, # or omit the namespaceSelector namespaceSelector: matchNames: - hpe-storage selector: matchLabels: app: hpe-array-exporter endpoints: - port: http-metrics scheme: http interval: 1m # Corresponding labels on the Array Exporter service are added to # the scraped metrics; customize as desired targetLabels: - array Note It may be desirable for metrics from the exporter to include a label identifying the storage system from which they are collected. In this example, the targetLabels configuration refers to an array label that must have been included in the Service object. A ServiceMonitor example can also be found in the sample YAML files .","title":"ServiceMonitor Example"},{"location":"legal/eula/index.html","text":"This software is provided according to HPE license restrictions . The deployment documentation describes how to indicate your acceptance of these terms.","title":"End User License Agreement"},{"location":"legal/notices/index.html","text":"HPE Storage Array Exporter for Prometheus Copyright 2020-2022 Hewlett Packard Enterprise Development LP This product contains the following third-party components: File system notifications for Go github.com/fsnotify/fsnotify Licensed under the BSD-3-Clause license Resty github.com/go-resty/resty/v2 Licensed under the MIT license Prometheus Go client library github.com/prometheus/client_golang Licensed under the Apache-2.0 license with the following notices: Prometheus instrumentation library for Go applications Copyright 2012-2015 The Prometheus Authors This product includes software developed at SoundCloud Ltd. (http://soundcloud.com/). The following components are included in this product: perks - a fork of https://github.com/bmizerany/perks https://github.com/beorn7/perks Copyright 2013-2015 Blake Mizerany, Bj\u00f6rn Rabenstein See https://github.com/beorn7/perks/blob/master/README.md for license details. Go support for Protocol Buffers - Google's data interchange format http://github.com/golang/protobuf/ Copyright 2010 The Go Authors See source code for license details. Support for streaming Protocol Buffer messages for the Go language (golang). https://github.com/matttproud/golang_protobuf_extensions Copyright 2013 Matt T. Proud Licensed under the Apache License, Version 2.0 Prometheus Go client model github.com/prometheus/client_model Licensed under the Apache-2.0 license with the following notices: Data model artifacts for Prometheus. Copyright 2012-2015 The Prometheus Authors This product includes software developed at SoundCloud Ltd. (http://soundcloud.com/). Testify github.com/stretchr/testify Licensed under the MIT license YAML support for the Go language gopkg.in/yaml.v2 Licensed under the Apache-2.0 license with the following notices: Copyright 2011-2016 Canonical Ltd. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Go Networking golang.org/x/net Licensed under the BSD-3-Clause Tom's Obvious, Minimal Language github.com/BurntSushi/toml Licensed under the MIT license mapstructure github.com/mitchellh/mapstructure Licensed under the MIT license Common github.com/prometheus/common Licensed under the Apach-2.0 License Common libraries shared by Prometheus Go components. Copyright 2015 The Prometheus Authors This product includes software developed at SoundCloud Ltd. (http://soundcloud.com/). Logrus github.com/sirupsen/logrus Licensed under the MIT license Objx github.com/stretchr/objx Licensed under the MIT license lumberjack gopkg.in/natefinch/lumberjack.v2 Licensed under the MIT license Go JOSE gopkg.in/square/go-jose.v2 Licensed under the Apache-2.0 license Perks for Go github.com/beorn7/perks Licensed under the MIT license xxhash github.com/cespare/xxhash Licensed under the MIT license Go support for Protocol Buffers github.com/golang/protobuf Licensed under the BSD-3-Clause license json-iterator github.com/json-iterator/go Licensed under the MIT license sys pkg.go.dev/golang.org/x/sys Licensed under the BSD-3-Clause license Go Text pkg.go.dev/golang.org/x/text Licensed under the BSD-3-Clause license Go Sync pkg.go.dev/golang.org/x/sync Licensed under the BSD-3-Clause license go-spew github.com/davecgh/go-spew Licensed under the ISC license go-difflib github.com/pmezard/go-difflib Licensed under the BSD-3-Clause license Go Cryptography github.com/cloudhousetech/crypto Licensed under the BSD-3-Clause license text github.com/kr/text Licensed under the MIT license pretty github.com/niemeyer/pretty Licensed under the MIT license check gopkg.in/check.v1 Licensed under the BSD-3-Clause license Go Cryptography pkg.go.dev/golang.org/x/crypto Licensed under the BSD-3-Clause license Go's text/template package with newline elision github.com/alecthomas/template Licensed under the BSD-3-Clause license Units github.com/alecthomas/units Licensed under the MIT license Go kit github.com/go-kit/kit Licensed under the MIT license logfmt github.com/go-logfmt/logfmt Licensed under the MIT license HttpRouter github.com/julienschmidt/httprouter Licensed under the BSD-3-Clause license golang protobuf extensions github.com/matttproud/golang_protobuf_extensions Licensed under the Apach-2.0 license with the following notice: Copyright 2012 Matt T. Proud (matt.proud@gmail.com) Go tracing and monitoring (Prometheus) for net.Conn github.com/mwitkow/go-conntrack Licensed under the Apach-2.0 license errors github.com/pkg/errors Licensed under the BSD-2-Clause license Kingpin gopkg.in/alecthomas/kingpin.v2 Licensed under the MIT license Windows Terminal Sequences github.com/konsorten/go-windows-terminal-sequences Licensed under the MIT license Package for equality for Go values github.com/google/go-cmp Licensed under the BSD-3-Clause license gofuzz github.com/google/gofuzz Licensed under the Apache-2.0 license concurrent github.com/modern-go/concurrent Licensed under the Apache-2.0 license reflect2 github.com/modern-go/reflect2 Licensed under the Apache-2.0 license package log github.com/go-kit/log Licensed under the MIT license Backoff github.com/jpillora/backoff Licensed under the MIT license OAuth2 for Go pkg.go.dev/golang.org/x/oauth2 Licensed under the BSD-3-Clause license Go Tools pkg.go.dev/golang.org/x/tools Licensed under the BSD-3-Clause license pty github.com/creack/pty Licensed under the MIT license Go Networking pkg.go.dev/golang.org/x/net Licensed under the BSD-3-Clause license procfs github.com/prometheus/procfs Licensed under the Apache-2.0 license with notice: procfs provides functions to retrieve system, kernel and process metrics from the pseudo-filesystem proc. Copyright 2014-2015 The Prometheus Authors This product includes software developed at SoundCloud Ltd. (http://soundcloud.com/). xerrors pkg.go.dev/golang.org/x/xerrors Licensed under the BSD-3-Clause license stack github.com/go-stack/stack Licensed under the MIT license Go App Engine packages pkg.go.dev/google.golang.org/appengine Licensed under the Apache-2.0 license pty github.com/kr/pty Licensed under the MIT license Licenses: MIT License Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: You must give any other recipients of the Work or Derivative Works a copy of this License; and You must cause any modified files to carry prominent notices stating that You changed the files; and You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS BSD-3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. BSD-2-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ISC License Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"Notices"},{"location":"legal/support/index.html","text":"The HPE Storage Array Exporter for Prometheus is supported by HPE when used with HPE storage arrays on valid support contracts. Send email to support@nimblestorage.com to get started with any issue that requires assistance. Engage your HPE representative for other means to contact HPE Storage support directly.","title":"Support"},{"location":"metrics/index.html","text":"Overview \u00b6 The metrics provided by the HPE Storage Array Exporter for Prometheus vary according to the storage system to which it is connected. Overview HPE Alletra 9000 and Primera Common Provisioning Group (CPG) Space Volume Space Volume Performance HPE Alletra 5000/6000 and Nimble Storage Pool Space Volume Space Volume Performance HPE Alletra 9000 and Primera \u00b6 The metrics provided for HPE Alletra 9000 and Primera storage systems (3PAR is also supported) are equivalent, with the metric names reflecting the storage system type. Common Provisioning Group (CPG) Space \u00b6 Metric Type Description hpealletra9000_cpg_capacity_bytes hpeprimera_cpg_capacity_bytes hpe3par_cpg_capacity_bytes Gauge Total capacity allocated to a CPG hpealletra9000_cpg_used_bytes hpeprimera_cpg_used_bytes hpe3par_cpg_used_bytes Gauge CPG capacity in use hpealletra9000_cpg_available_bytes hpeprimera_cpg_available_bytes hpe3par_cpg_available_bytes Gauge CPG capacity available hpealletra9000_cpg_volume_used_bytes hpeprimera_cpg_volume_used_bytes hpe3par_cpg_volume_used_bytes Gauge CPG capacity reserved for volumes hpealletra9000_cpg_snapshot_used_bytes hpeprimera_cpg_snapshot_used_bytes hpe3par_cpg_snapshot_used_bytes Gauge CPG capacity reserved for snapshots Each of these metrics includes the following label. Label Description cpg CPG name Volume Space \u00b6 Metric Type Labels Description hpealletra9000_volume_size_bytes hpeprimera_volume_size_bytes hpe3par_volume_size_bytes Gauge cpg, provisioning, volume Volume data capacity hpealletra9000_volume_used_bytes hpeprimera_volume_used_bytes hpe3par_volume_used_bytes Gauge cpg, provisioning, volume Space used for volume data, including reserved space for a fully-provisioned volume hpealletra9000_volume_snapshot_used_bytes hpeprimera_volume_snapshot_used_bytes hpe3par_volume_snapshot_used_bytes Gauge cpg, provisioning, snap_cpg, volume Space used for volume snapshots The labels have the following meanings. Label Description cpg Name of the CPG containing the volume provisioning Indicates whether storage space is reserved upon volume creation (\"thick\") or as needed (\"thin\") snap_cpg Name of the CPG containing the volume snapshots volume Volume name Volume Performance \u00b6 Metric Type Description hpealletra9000_volume_reads_per_second_avg5m hpeprimera_volume_reads_per_second_avg5m hpep3par_volume_reads_per_second_avg5m Gauge Read operations performed on the VLUNs for a volume per second, averaged over a fixed five-minute interval (read IOPS) hpealletra9000_volume_writes_per_second_avg5m hpeprimera_volume_writes_per_second_avg5m hpe3par_volume_writes_per_second_avg5m Gauge Write operations performed on the VLUNs for a volume per second, averaged over a fixed five-minute interval (write IOPS) hpealletra9000_volume_read_bytes_per_second_avg5m hpeprimera_volume_read_bytes_per_second_avg5m hpe3par_volume_read_bytes_per_second_avg5m Gauge Bytes read from the VLUNs for a volume per second, averaged over a fixed five-minute interval (read throughput) hpealletra9000_volume_write_bytes_per_second_avg5m hpeprimera_volume_write_bytes_per_second_avg5m hpe3par_volume_write_bytes_per_second_avg5m Gauge Bytes written to the VLUNs for a volume per second, averaged over a fixed five-minute interval (write throughput) hpealletra9000_volume_seconds_per_read_avg5m hpeprimera_volume_seconds_per_read_avg5m hpe3par_volume_seconds_per_read_avg5m Gauge Seconds elapsed during a single read from the VLUNs for a volume, averaged over a fixed five-minute interval (read latency) hpealletra9000_volume_seconds_per_write_avg5m hpeprimera_volume_seconds_per_write_avg5m hpe3par_volume_seconds_per_write_avg5m Gauge Seconds elapsed during a single write to the VLUNs for a volume, averaged over a fixed five-minute interval (write latency) Each of these metrics includes the following labels. Label Description cpg Name of the CPG containing the volume volume Volume name HPE Alletra 5000/6000 and Nimble \u00b6 The metrics provided for HPE Alletra 5000/6000 and Nimble Storage systems are equivalent, with the metric names reflecting the storage system type. Note HPE Alletra 5000 metrics will appear as \"hpealletra6000\". Storage Pool Space \u00b6 Metric Type Description hpealletra6000_pool_capacity_bytes hpenimble_pool_capacity_bytes Gauge Total bytes that can be written into a storage pool hpealletra6000_pool_used_bytes hpenimble_pool_used_bytes Gauge Storage pool capacity in use hpealletra6000_pool_available_bytes hpenimble_pool_available_bytes Gauge Storage pool capacity available to provision volumes hpealletra6000_pool_unused_reserve_bytes hpenimble_pool_unused_reserve_bytes Gauge Storage pool capacity that is reserved for existing volumes but is not in use hpealletra6000_pool_volume_used_bytes hpenimble_pool_volume_used_bytes Gauge Total logical size of all volumes in a storage pool hpealletra6000_pool_snapshot_used_bytes hpenimble_pool_snapshot_used_bytes Gauge Total logical size of all snapshots in a storage pool hpealletra6000_pool_data_reduction_bytes hpenimble_pool_data_reduction_bytes Gauge Storage pool capacity that would be in use if not for storage system optimizations, including compression, deduplication, and clones, but excluding thin provisioning Each of these metrics includes the following label. Label Description pool Storage pool name Volume Space \u00b6 Metric Type Description hpealletra6000_volume_size_bytes hpenimble_volume_size_bytes Gauge Volume data capacity hpealletra6000_volume_used_bytes hpenimble_volume_used_bytes Gauge Space used for volume data hpealletra6000_volume_snapshot_used_bytes hpenimble_volume_snapshot_used_bytes Gauge Space used for volume snapshots Each of these metrics includes the following labels. Label Description pool Name of the storage pool containing the volume provisioning Indicates whether storage space is reserved upon volume creation (\"thick\") or as needed (\"thin\") volume Volume ID volume_name Volume name Volume Performance \u00b6 Metric Type Description hpealletra6000_volume_reads_per_second_avg5m hpenimble_volume_reads_per_second_avg5m Gauge Read operations performed on a volume per second, averaged over the preceding five minutes (read IOPS) hpealletra6000_volume_writes_per_second_avg5m hpenimble_volume_writes_per_second_avg5m Gauge Write operations performed on a volume per second, averaged over the preceding five minutes (write IOPS) hpealletra6000_volume_read_bytes_per_second_avg5m hpenimble_volume_read_bytes_per_second_avg5m Gauge Bytes read from a volume per second, averaged over the preceding five minutes (read throughput) hpealletra6000_volume_write_bytes_per_second_avg5m hpenimble_volume_write_bytes_per_second_avg5m Gauge Bytes written to a volume per second, averaged over the preceding five minutes (write throughput) hpealletra6000_volume_seconds_per_read_avg5m hpenimble_volume_seconds_per_read_avg5m Gauge Seconds elapsed during a single read from a volume, averaged over the preceding five minutes (read latency) hpealletra6000_volume_seconds_per_write_avg5m hpenimble_volume_seconds_per_write_avg5m Gauge Seconds elapsed during a single write to a volume, averaged over the preceding five minutes (write latency) Each of these metrics includes the following labels. Label Description pool Name of the storage pool containing the volume volume Volume ID volume_name Volume name","title":"Metrics"},{"location":"metrics/index.html#overview","text":"The metrics provided by the HPE Storage Array Exporter for Prometheus vary according to the storage system to which it is connected. Overview HPE Alletra 9000 and Primera Common Provisioning Group (CPG) Space Volume Space Volume Performance HPE Alletra 5000/6000 and Nimble Storage Pool Space Volume Space Volume Performance","title":"Overview"},{"location":"metrics/index.html#hpe_alletra_9000_and_primera","text":"The metrics provided for HPE Alletra 9000 and Primera storage systems (3PAR is also supported) are equivalent, with the metric names reflecting the storage system type.","title":"HPE Alletra 9000 and Primera"},{"location":"metrics/index.html#common_provisioning_group_cpg_space","text":"Metric Type Description hpealletra9000_cpg_capacity_bytes hpeprimera_cpg_capacity_bytes hpe3par_cpg_capacity_bytes Gauge Total capacity allocated to a CPG hpealletra9000_cpg_used_bytes hpeprimera_cpg_used_bytes hpe3par_cpg_used_bytes Gauge CPG capacity in use hpealletra9000_cpg_available_bytes hpeprimera_cpg_available_bytes hpe3par_cpg_available_bytes Gauge CPG capacity available hpealletra9000_cpg_volume_used_bytes hpeprimera_cpg_volume_used_bytes hpe3par_cpg_volume_used_bytes Gauge CPG capacity reserved for volumes hpealletra9000_cpg_snapshot_used_bytes hpeprimera_cpg_snapshot_used_bytes hpe3par_cpg_snapshot_used_bytes Gauge CPG capacity reserved for snapshots Each of these metrics includes the following label. Label Description cpg CPG name","title":"Common Provisioning Group (CPG) Space"},{"location":"metrics/index.html#volume_space","text":"Metric Type Labels Description hpealletra9000_volume_size_bytes hpeprimera_volume_size_bytes hpe3par_volume_size_bytes Gauge cpg, provisioning, volume Volume data capacity hpealletra9000_volume_used_bytes hpeprimera_volume_used_bytes hpe3par_volume_used_bytes Gauge cpg, provisioning, volume Space used for volume data, including reserved space for a fully-provisioned volume hpealletra9000_volume_snapshot_used_bytes hpeprimera_volume_snapshot_used_bytes hpe3par_volume_snapshot_used_bytes Gauge cpg, provisioning, snap_cpg, volume Space used for volume snapshots The labels have the following meanings. Label Description cpg Name of the CPG containing the volume provisioning Indicates whether storage space is reserved upon volume creation (\"thick\") or as needed (\"thin\") snap_cpg Name of the CPG containing the volume snapshots volume Volume name","title":"Volume Space"},{"location":"metrics/index.html#volume_performance","text":"Metric Type Description hpealletra9000_volume_reads_per_second_avg5m hpeprimera_volume_reads_per_second_avg5m hpep3par_volume_reads_per_second_avg5m Gauge Read operations performed on the VLUNs for a volume per second, averaged over a fixed five-minute interval (read IOPS) hpealletra9000_volume_writes_per_second_avg5m hpeprimera_volume_writes_per_second_avg5m hpe3par_volume_writes_per_second_avg5m Gauge Write operations performed on the VLUNs for a volume per second, averaged over a fixed five-minute interval (write IOPS) hpealletra9000_volume_read_bytes_per_second_avg5m hpeprimera_volume_read_bytes_per_second_avg5m hpe3par_volume_read_bytes_per_second_avg5m Gauge Bytes read from the VLUNs for a volume per second, averaged over a fixed five-minute interval (read throughput) hpealletra9000_volume_write_bytes_per_second_avg5m hpeprimera_volume_write_bytes_per_second_avg5m hpe3par_volume_write_bytes_per_second_avg5m Gauge Bytes written to the VLUNs for a volume per second, averaged over a fixed five-minute interval (write throughput) hpealletra9000_volume_seconds_per_read_avg5m hpeprimera_volume_seconds_per_read_avg5m hpe3par_volume_seconds_per_read_avg5m Gauge Seconds elapsed during a single read from the VLUNs for a volume, averaged over a fixed five-minute interval (read latency) hpealletra9000_volume_seconds_per_write_avg5m hpeprimera_volume_seconds_per_write_avg5m hpe3par_volume_seconds_per_write_avg5m Gauge Seconds elapsed during a single write to the VLUNs for a volume, averaged over a fixed five-minute interval (write latency) Each of these metrics includes the following labels. Label Description cpg Name of the CPG containing the volume volume Volume name","title":"Volume Performance"},{"location":"metrics/index.html#hpe_alletra_50006000_and_nimble","text":"The metrics provided for HPE Alletra 5000/6000 and Nimble Storage systems are equivalent, with the metric names reflecting the storage system type. Note HPE Alletra 5000 metrics will appear as \"hpealletra6000\".","title":"HPE Alletra 5000/6000 and Nimble"},{"location":"metrics/index.html#storage_pool_space","text":"Metric Type Description hpealletra6000_pool_capacity_bytes hpenimble_pool_capacity_bytes Gauge Total bytes that can be written into a storage pool hpealletra6000_pool_used_bytes hpenimble_pool_used_bytes Gauge Storage pool capacity in use hpealletra6000_pool_available_bytes hpenimble_pool_available_bytes Gauge Storage pool capacity available to provision volumes hpealletra6000_pool_unused_reserve_bytes hpenimble_pool_unused_reserve_bytes Gauge Storage pool capacity that is reserved for existing volumes but is not in use hpealletra6000_pool_volume_used_bytes hpenimble_pool_volume_used_bytes Gauge Total logical size of all volumes in a storage pool hpealletra6000_pool_snapshot_used_bytes hpenimble_pool_snapshot_used_bytes Gauge Total logical size of all snapshots in a storage pool hpealletra6000_pool_data_reduction_bytes hpenimble_pool_data_reduction_bytes Gauge Storage pool capacity that would be in use if not for storage system optimizations, including compression, deduplication, and clones, but excluding thin provisioning Each of these metrics includes the following label. Label Description pool Storage pool name","title":"Storage Pool Space"},{"location":"metrics/index.html#volume_space_1","text":"Metric Type Description hpealletra6000_volume_size_bytes hpenimble_volume_size_bytes Gauge Volume data capacity hpealletra6000_volume_used_bytes hpenimble_volume_used_bytes Gauge Space used for volume data hpealletra6000_volume_snapshot_used_bytes hpenimble_volume_snapshot_used_bytes Gauge Space used for volume snapshots Each of these metrics includes the following labels. Label Description pool Name of the storage pool containing the volume provisioning Indicates whether storage space is reserved upon volume creation (\"thick\") or as needed (\"thin\") volume Volume ID volume_name Volume name","title":"Volume Space"},{"location":"metrics/index.html#volume_performance_1","text":"Metric Type Description hpealletra6000_volume_reads_per_second_avg5m hpenimble_volume_reads_per_second_avg5m Gauge Read operations performed on a volume per second, averaged over the preceding five minutes (read IOPS) hpealletra6000_volume_writes_per_second_avg5m hpenimble_volume_writes_per_second_avg5m Gauge Write operations performed on a volume per second, averaged over the preceding five minutes (write IOPS) hpealletra6000_volume_read_bytes_per_second_avg5m hpenimble_volume_read_bytes_per_second_avg5m Gauge Bytes read from a volume per second, averaged over the preceding five minutes (read throughput) hpealletra6000_volume_write_bytes_per_second_avg5m hpenimble_volume_write_bytes_per_second_avg5m Gauge Bytes written to a volume per second, averaged over the preceding five minutes (write throughput) hpealletra6000_volume_seconds_per_read_avg5m hpenimble_volume_seconds_per_read_avg5m Gauge Seconds elapsed during a single read from a volume, averaged over the preceding five minutes (read latency) hpealletra6000_volume_seconds_per_write_avg5m hpenimble_volume_seconds_per_write_avg5m Gauge Seconds elapsed during a single write to a volume, averaged over the preceding five minutes (write latency) Each of these metrics includes the following labels. Label Description pool Name of the storage pool containing the volume volume Volume ID volume_name Volume name","title":"Volume Performance"},{"location":"releases/index.html","text":"Overview \u00b6 HPE Storage Array Exporter for Prometheus is a unified exporter that supports the HPE primary storage portfolio. The metrics provided differ by storage system type and release. Delivery Vehicles \u00b6 The exporter is delivered as: Standalone binaries for Linux through GitHub releases. Container images hosted on Quay, deployable via standalone Docker or via Kubernetes (with object definitions in YAML available in GitHub). Helm charts hosted at Artifact Hub. HPE Storage Array Exporter for Prometheus 1.0.3 \u00b6 Release highlights: Support for HPE Alletra Storage MP Block Binaries and Release Notes 1.0.3 on GitHub Helm Chart 1.0.3 on Artifact Hub Platforms Alletra Storage MP OS 10.0.0 or later Alletra OS 9000 9.3.0 or later Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10 or later Primera OS 4.0.0 or later 3PAR OS 3.3.1 or later HPE Storage Array Exporter for Prometheus 1.0.2 \u00b6 Release highlights: ARM64 images Binaries and Release Notes 1.0.2 on GitHub Helm Chart 1.0.2 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2 HPE Storage Array Exporter for Prometheus 1.0.1 \u00b6 Release highlights: Security updates Binaries and Release Notes 1.0.1 on GitHub Helm Chart 1.0.1 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2 HPE Storage Array Exporter for Prometheus 1.0.0 \u00b6 Release highlights: Initial version Binaries and Release Notes 1.0.0 on GitHub Helm Chart 1.0.0 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2 Blogs Release blog on Around The Storage Block Tutorial using Docker on HPE Developer Community","title":"Releases"},{"location":"releases/index.html#overview","text":"HPE Storage Array Exporter for Prometheus is a unified exporter that supports the HPE primary storage portfolio. The metrics provided differ by storage system type and release.","title":"Overview"},{"location":"releases/index.html#delivery_vehicles","text":"The exporter is delivered as: Standalone binaries for Linux through GitHub releases. Container images hosted on Quay, deployable via standalone Docker or via Kubernetes (with object definitions in YAML available in GitHub). Helm charts hosted at Artifact Hub.","title":"Delivery Vehicles"},{"location":"releases/index.html#hpe_storage_array_exporter_for_prometheus_103","text":"Release highlights: Support for HPE Alletra Storage MP Block Binaries and Release Notes 1.0.3 on GitHub Helm Chart 1.0.3 on Artifact Hub Platforms Alletra Storage MP OS 10.0.0 or later Alletra OS 9000 9.3.0 or later Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10 or later Primera OS 4.0.0 or later 3PAR OS 3.3.1 or later","title":"HPE Storage Array Exporter for Prometheus 1.0.3"},{"location":"releases/index.html#hpe_storage_array_exporter_for_prometheus_102","text":"Release highlights: ARM64 images Binaries and Release Notes 1.0.2 on GitHub Helm Chart 1.0.2 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2","title":"HPE Storage Array Exporter for Prometheus 1.0.2"},{"location":"releases/index.html#hpe_storage_array_exporter_for_prometheus_101","text":"Release highlights: Security updates Binaries and Release Notes 1.0.1 on GitHub Helm Chart 1.0.1 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 5000/6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2","title":"HPE Storage Array Exporter for Prometheus 1.0.1"},{"location":"releases/index.html#hpe_storage_array_exporter_for_prometheus_100","text":"Release highlights: Initial version Binaries and Release Notes 1.0.0 on GitHub Helm Chart 1.0.0 on Artifact Hub Platforms Alletra OS 9000 9.3.0 Alletra OS 6000 6.0.0 or later Nimble OS 5.0.10.x or later Primera OS 4.0.x, 4.1.x, 4.2.x, 4.3.x 3PAR OS 3.3.1, 3.3.2 Blogs Release blog on Around The Storage Block Tutorial using Docker on HPE Developer Community","title":"HPE Storage Array Exporter for Prometheus 1.0.0"}]}